{"ast":null,"code":"import React from\"react\";import axios from\"axios\";import{IonPage,IonContent,IonToolbar,IonTitle,IonHeader,IonButtons,IonBackButton}from\"@ionic/react\";import tools from'../components/Tools';import Widgets from'../components/Widgets';import utils from'../Payment/Utils';import'./Payment.css';var Payment=function Payment(){var handleToken=function handleToken(customer){axios.post(tools.URL.CHECKOUT,{token:customer,product:utils.getData()}).then(function(response){var status=response.data.status;console.log(\"Response:\",response.data);if(status===\"success\"){console.log(\"Success! Check email for details\");}else{console.log(\"Something went wrong\");}}).catch(function(error){}).finally(function(){});};/*const [paymentDisabled, setPaymentDisabled] = useState(true);\r\n    const [selectName, setSelectName] = useState();\r\n    const [getData, setData] = useState(utils.dummyData);\r\n    const RIGHTSIDEWIDTH = tools.compare(tools.platform(),true,\"\",\"400PX\");\r\n    const LEFTSIDEWIDTH = tools.compare(tools.platform(),true,\"\",\"600PX\");\r\n    const FLOATlEFT = tools.compare(tools.platform(),true,\"\",\"left\");\r\n    const FLOATRIGHT = tools.compare(tools.platform(),true,\"\",\"right\");*/return/*#__PURE__*/React.createElement(IonPage,{style:{border:\"1px solid gray\"}},/*#__PURE__*/React.createElement(Widgets.popUpInfo,null),/*#__PURE__*/React.createElement(IonHeader,null,/*#__PURE__*/React.createElement(IonToolbar,null,/*#__PURE__*/React.createElement(IonButtons,{slot:\"start\"},/*#__PURE__*/React.createElement(IonBackButton,{defaultHref:\"\"})),/*#__PURE__*/React.createElement(IonTitle,{style:{color:\"teal\",fontWeight:\"bold\",fontSize:\"30px\"}},\"Payments\"))),/*#__PURE__*/React.createElement(IonContent,null));};export default Payment;","map":{"version":3,"sources":["C:/Users/user/Desktop/ionicApps/newBillPayApp/billPayApp/src/Payment/Payment.tsx"],"names":["React","axios","IonPage","IonContent","IonToolbar","IonTitle","IonHeader","IonButtons","IonBackButton","tools","Widgets","utils","Payment","handleToken","customer","post","URL","CHECKOUT","token","product","getData","then","response","status","data","console","log","catch","error","finally","border","color","fontWeight","fontSize"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,UAAlB,CAA8HC,UAA9H,CAA0IC,QAA1I,CAAoJC,SAApJ,CAA+JC,UAA/J,CAA2KC,aAA3K,KAAgM,cAAhM,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CAEA,MAAO,eAAP,CAGA,GAAMC,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,CAC5B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAkB,CAClCb,KAAK,CAACc,IAAN,CAAWN,KAAK,CAACO,GAAN,CAAUC,QAArB,CAA8B,CAACC,KAAK,CAACJ,QAAP,CAAgBK,OAAO,CAAER,KAAK,CAACS,OAAN,EAAzB,CAA9B,EACCC,IADD,CACM,SAAAC,QAAQ,CAAG,IACLC,CAAAA,MADK,CACMD,QAAQ,CAACE,IADf,CACLD,MADK,CAETE,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBJ,QAAQ,CAACE,IAAlC,EACJ,GAAID,MAAM,GAAK,SAAf,CAA0B,CACtBE,OAAO,CAACC,GAAR,CAAY,kCAAZ,EACH,CAFD,IAEO,CACHD,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACH,CACJ,CATD,EAUCC,KAVD,CAUO,SAAAC,KAAK,CAAE,CAEb,CAZD,EAaCC,OAbD,CAaS,UAAI,CAEZ,CAfD,EAgBH,CAjBD,CAmBA;;;;;;yEAOA,mBACI,oBAAC,OAAD,EAAS,KAAK,CAAE,CAACC,MAAM,CAAC,gBAAR,CAAhB,eACI,oBAAC,OAAD,CAAS,SAAT,MADJ,cAGI,oBAAC,SAAD,mBACI,oBAAC,UAAD,mBACI,oBAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,eACI,oBAAC,aAAD,EAAe,WAAW,CAAC,EAA3B,EADJ,CADJ,cAII,oBAAC,QAAD,EAAU,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAAcC,UAAU,CAAC,MAAzB,CAAgCC,QAAQ,CAAC,MAAzC,CAAjB,aAJJ,CADJ,CAHJ,cAYI,oBAAC,UAAD,MAZJ,CADJ,CA0FH,CArHD,CAwHA,cAAerB,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport { IonPage, IonContent, IonSelect, IonSelectOption, IonLabel, IonItem, IonCard, IonList, IonText, IonImg, IonThumbnail, IonToolbar, IonTitle, IonHeader, IonButtons, IonBackButton } from \"@ionic/react\";\r\nimport tools from '../components/Tools';\r\nimport Widgets from '../components/Widgets';\r\nimport utils from '../Payment/Utils';\r\nimport Info from '../Payment/Info';\r\nimport './Payment.css';\r\n\r\n\r\nconst Payment: React.FC = () => {\r\n    const handleToken = (customer:any) => {\r\n        axios.post(tools.URL.CHECKOUT,{token:customer,product: utils.getData()})\r\n        .then(response =>{\r\n            const { status } = response.data;\r\n                console.log(\"Response:\", response.data);\r\n            if (status === \"success\") {\r\n                console.log(\"Success! Check email for details\");\r\n            } else {\r\n                console.log(\"Something went wrong\");\r\n            }\r\n        })\r\n        .catch(error=>{\r\n\r\n        })\r\n        .finally(()=>{\r\n\r\n        });\r\n    }\r\n    \r\n    /*const [paymentDisabled, setPaymentDisabled] = useState(true);\r\n    const [selectName, setSelectName] = useState();\r\n    const [getData, setData] = useState(utils.dummyData);\r\n    const RIGHTSIDEWIDTH = tools.compare(tools.platform(),true,\"\",\"400PX\");\r\n    const LEFTSIDEWIDTH = tools.compare(tools.platform(),true,\"\",\"600PX\");\r\n    const FLOATlEFT = tools.compare(tools.platform(),true,\"\",\"left\");\r\n    const FLOATRIGHT = tools.compare(tools.platform(),true,\"\",\"right\");*/\r\n    return (\r\n        <IonPage style={{border:\"1px solid gray\"}}>\r\n            <Widgets.popUpInfo/>\r\n\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonBackButton defaultHref=\"\"/>\r\n                    </IonButtons>\r\n                    <IonTitle style={{color:\"teal\",fontWeight:\"bold\",fontSize:\"30px\"}}>Payments</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent>\r\n                {/*<IonList style={{width:RIGHTSIDEWIDTH,height:\"100%\",float:FLOATlEFT}}>\r\n                    <IonCard style={{marginTop:\"10%\",border:\"1px solid lightgray\"}}>\r\n                        <IonItem style={{marginRight:\"20px\",marginLeft:\"20px\"}}>\r\n                            <IonLabel style={{color:\"teal\"}}>Bill paying too:</IonLabel>\r\n                            <IonSelect value={selectName} interface=\"popover\" placeholder=\"choose\" onIonChange={e =>{\r\n                                setData(utils.dummyData);\r\n                                setSelectName(e.detail.value);\r\n                                setData(e.detail.value);\r\n                                console.log(e.detail.value)\r\n                                utils.storeData(e.detail.value);\r\n                                setPaymentDisabled(false);\r\n                            }}>\r\n                                {\r\n                                    utils.utility.map((util:any,i:number) =>{\r\n                                        return(\r\n                                            <IonSelectOption key={i} value={util} >{util.name}</IonSelectOption>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </IonSelect>\r\n                        </IonItem>\r\n                    </IonCard>/*}\r\n\r\n                    {/*this is the info card and display company selected data*/}\r\n                    {/*<IonContent style={{textAlign:\"center\",height:tools.compare(tools.platform(),true,\"60%\",\"50%\")}}>\r\n                        <IonCard hidden={false} style={{marginTop:\"10%\",border:\"1px solid lightgray\"}}>\r\n                            <IonList>\r\n                                <IonThumbnail style={{width:\"230px\",height:\"130px\",\r\n                                        marginLeft:tools.compare(tools.platform(),true,\"16%\",\"20%\"),size:\"50px\"}}>\r\n                                    <IonImg src={getData.image}/>\r\n                                </IonThumbnail>\r\n                                <IonItem style={{textAlign:\"center\"}} lines=\"full\">\r\n                                    <IonLabel>{getData.name}</IonLabel>\r\n                                </IonItem>\r\n                                <IonItem style={{textAlign:\"center\"}} lines=\"full\">\r\n                                    <IonLabel>{getData.price}</IonLabel>\r\n                                </IonItem>\r\n                                <IonItem lines=\"full\">\r\n                                    <IonText>{getData.description}</IonText>\r\n                                </IonItem>\r\n                            </IonList>    \r\n                        </IonCard> \r\n                                 \r\n                                                \r\n                    </IonContent> \r\n                    <IonItem style={{textAlign:\"center\"}} lines=\"none\">\r\n                        <IonLabel>{getData.price}</IonLabel>\r\n                    </IonItem>\r\n                    <div style={{textAlign:\"center\",width:\"100%\",marginTop:\"-50\"}}>\r\n                        <StripeCheckout\r\n                            stripeKey=\"pk_test_51HMQLOBZvIBjqI0ERBmRc4Feu7qu6fXdnc8IZ9whUpTWAMIEZyYRSUsFCc2LQlXIPJJqBYgzcIbQJY5WODNXdiuf00TucXVjmM\"\r\n                            token={token=>{handleToken(token)}}\r\n                            amount={parseFloat(getData.price.replace(\"$\",\"\")) * 100}\r\n                            name={getData.name}\r\n                            billingAddress\r\n                            shippingAddress>\r\n                            <button id=\"stripeCheckout\" disabled={paymentDisabled}/>\r\n                        </StripeCheckout>\r\n                        <button className=\"checkOutButton checkOutButtonClick\" onClick={()=>{\r\n                            if (!paymentDisabled){\r\n                                tools.clickById(\"stripeCheckout\");\r\n                            }else{\r\n                                tools.clickById(\"popup-msg-arrow\");\r\n                            }\r\n                        }}>Pay With Card</button>\r\n                    </div>\r\n                </IonList>\r\n\r\n                {/*this section is the side of the payment string for information*/}\r\n                {/*<IonList style={{width:LEFTSIDEWIDTH,height:\"100%\",float:FLOATRIGHT}}>\r\n                    <Info/>\r\n                <IonList/>\r\n                </IonList>*/}\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}