{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\ionicApps\\\\newBillPayApp\\\\billPayApp\\\\src\\\\pages\\\\Payment.tsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout'; //cordova.plugins.stripe.setPublishableKey('pk_test_MyPublishableKey');\n\nconst Payment = () => {\n  const onToken = (token, addresses) => {// TODO: Send the token information and any other\n    // relevant information to your payment process\n    // server, wait for the response, and update the UI\n    // accordingly. How this is done is up to you. Using\n    // XHR, fetch, or a GraphQL mutation is typical.\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    amount: \"500\",\n    billingAddress: true,\n    description: \"Awesome Product\",\n    image: \"https://yourdomain.tld/images/logo.svg\",\n    locale: \"auto\",\n    name: \"YourDomain.tld\",\n    stripeKey: \"your_PUBLISHABLE_stripe_key\",\n    token: onToken,\n    zipCode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Payment;","map":{"version":3,"sources":["C:/Users/user/Desktop/ionicApps/newBillPayApp/billPayApp/src/pages/Payment.tsx"],"names":["React","StripeCheckout","Payment","onToken","token","addresses"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAEA;;AAEA,MAAMC,OAAiB,GAAG,MAAK;AAC3B,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB,CAClC;AACA;AACA;AACA;AACA;AACD,GANH;;AAOA,sBACI,oBAAC,cAAD;AACA,IAAA,MAAM,EAAC,KADP;AAEA,IAAA,cAAc,MAFd;AAGA,IAAA,WAAW,EAAC,iBAHZ;AAIA,IAAA,KAAK,EAAC,wCAJN;AAKA,IAAA,MAAM,EAAC,MALP;AAMA,IAAA,IAAI,EAAC,gBANL;AAOA,IAAA,SAAS,EAAC,6BAPV;AAQA,IAAA,KAAK,EAAEF,OARP;AASA,IAAA,OAAO,MATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CArBD;;AAuBA,eAAeD,OAAf","sourcesContent":["import React from 'react';\r\nimport tools from '../components/Tools';\r\nimport { IonPage, IonContent, IonLabel } from '@ionic/react';\r\nimport Wedgits from '../components/Widgets';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\n\r\n//cordova.plugins.stripe.setPublishableKey('pk_test_MyPublishableKey');\r\n\r\nconst Payment: React.FC = () =>{\r\n    const onToken = (token, addresses) => {\r\n        // TODO: Send the token information and any other\r\n        // relevant information to your payment process\r\n        // server, wait for the response, and update the UI\r\n        // accordingly. How this is done is up to you. Using\r\n        // XHR, fetch, or a GraphQL mutation is typical.\r\n      };\r\n    return(\r\n        <StripeCheckout\r\n        amount=\"500\"\r\n        billingAddress\r\n        description=\"Awesome Product\"\r\n        image=\"https://yourdomain.tld/images/logo.svg\"\r\n        locale=\"auto\"\r\n        name=\"YourDomain.tld\"\r\n        stripeKey=\"your_PUBLISHABLE_stripe_key\"\r\n        token={onToken}\r\n        zipCode\r\n      />\r\n    )\r\n}\r\n\r\nexport default Payment;"]},"metadata":{},"sourceType":"module"}